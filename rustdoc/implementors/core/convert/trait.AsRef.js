(function() {var implementors = {};
implementors["decorum"] = [{"text":"impl&lt;T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"decorum/struct.ConstrainedFloat.html\" title=\"struct decorum::ConstrainedFloat\">ConstrainedFloat</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"decorum/trait.Float.html\" title=\"trait decorum::Float\">Float</a> + <a class=\"trait\" href=\"decorum/trait.Primitive.html\" title=\"trait decorum::Primitive\">Primitive</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Constraint&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":["decorum::proxy::ConstrainedFloat"]}];
implementors["plexus"] = [{"text":"impl&lt;G, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[G]</a>&gt; for <a class=\"struct\" href=\"plexus/primitive/struct.NGon.html\" title=\"struct plexus::primitive::NGon\">NGon</a>&lt;G, N&gt;","synthetic":false,"types":["plexus::primitive::NGon"]},{"text":"impl&lt;G&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[G]</a>&gt; for <a class=\"enum\" href=\"plexus/primitive/enum.BoundedPolygon.html\" title=\"enum plexus::primitive::BoundedPolygon\">BoundedPolygon</a>&lt;G&gt;","synthetic":false,"types":["plexus::primitive::BoundedPolygon"]},{"text":"impl&lt;G&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[G]</a>&gt; for <a class=\"struct\" href=\"plexus/primitive/struct.UnboundedPolygon.html\" title=\"struct plexus::primitive::UnboundedPolygon\">UnboundedPolygon</a>&lt;G&gt;","synthetic":false,"types":["plexus::primitive::UnboundedPolygon"]}];
implementors["theon"] = [{"text":"impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;S&gt; for <a class=\"struct\" href=\"theon/query/struct.Unit.html\" title=\"struct theon::query::Unit\">Unit</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"theon/space/trait.InnerSpace.html\" title=\"trait theon::space::InnerSpace\">InnerSpace</a>,&nbsp;</span>","synthetic":false,"types":["theon::query::Unit"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()